[package]
name = "datadog-opentelemetry"
# rust-version.workspace = true
edition.workspace = true
version.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true
description.workspace = true

[dependencies]
# Workspace dependencies
dd-trace = { path = "../dd-trace" }
dd-trace-sampling = { path = "../dd-trace-sampling" }
dd-trace-propagation = { path = "../dd-trace-propagation", features = ["opentelemetry"] }
datadog-opentelemetry-mappings = { path = "../datadog-opentelemetry-mappings" }

# External dependencies
futures = { workspace = true }
opentelemetry_sdk = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry-semantic-conventions = { workspace = true }
rand = { workspace = true }

# Libdatadog dependencies
data-pipeline = { workspace = true }
datadog-trace-utils = { workspace = true }
tinybytes = { workspace = true }

[dev-dependencies]
assert_unordered = "0.3"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
tokio = { workspace = true }

# Libdatadog dependencies - change to a stable version once we release
datadog-trace-utils = { workspace = true, features = ["test-utils"] }
dd-trace-sampling = { path = "../dd-trace-sampling" }

# Depend on ourselves to have APIs exposed only during tests
# datadog-opentelemetry = { path = ".", features = ["test-utils"] }

# bench dependencies
ctor = "0.4.2"
axum = "0.7"
axum-server = "0.7.2"
tower = "0.5"
tower-http = { version = "0.6", features = ["trace", "cors"] }
opentelemetry_sdk = "0.28"
opentelemetry = "0.28"
opentelemetry-http = "0.28"
opentelemetry-otlp = "0.28"
opentelemetry-stdout = "0.28"
futures = "0.3"
clap = { version = "4.0", features = ["derive"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
test-utils = ["dd-trace/test-utils", "data-pipeline/test-utils"]

[[bench]]
name = "dd_otel_tracer_comparison"
harness = false