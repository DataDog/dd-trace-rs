name: Test
permissions:
   contents: read
on: [push]
env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.84.1

jobs:
  test:
    name: "cargo test --workspace #${{ matrix.platform }} ${{ matrix.rust_version }}"
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-13]
        rust_version: [""]
        include:
          - platform: "ubuntu-latest"
            rust_version: "${RUST_VERSION}"
      fail-fast: false
    steps:
      - name: Free Disk Space (Ubuntu only)
        if: runner.os == 'Linux' && matrix.platform == 'ubuntu-latest'
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: ./.github/actions/cache
        with:
          rust_version: ${{ matrix.rust_version }}
      - name: Install Rust ${{ matrix.rust_version }}
        if: matrix.rust_version != ''
        run: rustup install ${{ matrix.rust_version }} && rustup default ${{ matrix.rust_version }}
      - id: rust-version
        # On Windows run happens in a PowerShell, so start bash explicitly
        run: bash -c 'echo "version=$(rustc --version)" >> $GITHUB_OUTPUT'
      - name: Install cargo nextest
        uses: taiki-e/install-action@955a6ff1416eae278c9f833008a9beb4b7f9afe3 # v2.49.15,
        with:
          tool: nextest@0.9.81
      - name: "Remove nextest CI report"
        shell: bash
        run: rm -rf target/nextest/ci/junit.xml
      - name: "[${{ steps.rust-version.outputs.version}}] cargo build --workspace  --verbose --locked"
        shell: bash
        run: cargo build --workspace  --verbose --locked
      - name: "[${{ steps.rust-version.outputs.version}}] test agent integration tests"
        if: runner.os == 'Linux'
        shell: bash
        run: cargo nextest run --workspace  --profile ci --locked -E 'test(datadog_test_agent::)'
        env:
          RUST_BACKTRACE: 1
      - name: "[${{ steps.rust-version.outputs.version}}] cargo nextest run --workspace  --profile ci --locked"
        shell: bash
        # Run doc tests with cargo test and run tests with nextest and generate junit.xml
        run: cargo test --workspace  --doc --verbose --locked && cargo nextest run --workspace  --profile ci --locked -E '!test(datadog_test_agent::)'
        env:
          RUST_BACKTRACE: 1
      - name: Report Test Results
        if: success() || failure()
        uses: mikepenz/action-junit-report@db71d41eb79864e25ab0337e395c352e84523afe # v4.3.1
        with:
          report_paths: "target/nextest/ci/junit.xml"
          check_name: "[${{ matrix.platform }}:${{ matrix.rust_version }}] test report"
          include_passed: true
      - name: Upload test results to Datadog
        if: success() || failure()
        uses: datadog/junit-upload-github-action@762867566348d59ac9bcf479ebb4ec040db8940a # v2.0.0
        with:
          api_key: ${{ secrets.DATADOG_API_KEY }}
          env: ci
          service: dd-trace-rs
          files: target/nextest/ci/junit.xml
          logs: true
          tags: rustc:${{ matrix.rust_version }},arch:${{ runner.arch }},os:${{ runner.os }},platform:${{ matrix.platform }}

  cross-centos7:
    name: build and test using cross - on centos7
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref }}-cross-centos7
      cancel-in-progress: true
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: ./.github/actions/cache
        with:
          rust_version: cross-centos7
      - run: cargo install cross || true
      - run: cross build --locked --workspace --target x86_64-unknown-linux-gnu 
      - run: cross test --locked --workspace --target x86_64-unknown-linux-gnu -- --skip "datadog_test_agent::"

  # TODO: check if we can avoid build-artifacts step indicating the target branch with _system_tests_library_target_branch of run-parametric.yml
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dd-trace-rs
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Pack dd-trace-rs
        run: mkdir -p ./binaries/dd-trace-rs && cp -r datadog-opentelemetry datadog-opentelemetry-mappings dd-trace dd-trace-propagation dd-trace-sampling Cargo.toml ./binaries/dd-trace-rs/
      - name: Upload artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: system_tests_binaries
          path: ./binaries/**/*

  parametric:
    needs:
      - build-artifacts
    uses: DataDog/system-tests/.github/workflows/run-parametric.yml@a675fcc0b1d582485c57c4ab0c30cf2f9eb217ea # igor/rust-the-germ
    secrets: inherit
    with:
      library: rust
      binaries_artifact: system_tests_binaries
      job_count: 2
      job_matrix: '[1,2]'
      ref: igor/rust-the-germ
      _experimental_runs_on: '{ "group": "Large Runner Shared Public" }'
