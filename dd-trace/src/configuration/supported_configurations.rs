// Copyright 2025-Present Datadog, Inc. https://www.datadoghq.com/
// SPDX-License-Identifier: Apache-2.0

/// This file is generated by the scripts/local_config_map_generate.py script.
/// Do not edit this file manually. To add a new configuration,
/// add it to the supported-configurations.json file, then run this script.
#[allow(nonstandard_style)]
#[derive(Debug, PartialEq, Copy, Clone)]
#[non_exhaustive]
pub(crate) enum SupportedConfigurations {
    DD_AGENT_HOST,
    DD_DOGSTATSD_HOST,
    DD_DOGSTATSD_PORT,
    DD_DOGSTATSD_URL,
    DD_ENV,
    DD_INSTRUMENTATION_TELEMETRY_ENABLED,
    DD_LOG_LEVEL,
    DD_REMOTE_CONFIG_ENABLED,
    DD_REMOTE_CONFIG_POLL_INTERVAL_SECONDS,
    DD_REMOTE_CONFIGURATION_ENABLED,
    DD_SERVICE,
    DD_TAGS,
    DD_TELEMETRY_HEARTBEAT_INTERVAL,
    DD_TELEMETRY_LOG_COLLECTION_ENABLED,
    DD_TRACE_AGENT_PORT,
    DD_TRACE_AGENT_URL,
    DD_TRACE_ENABLED,
    DD_TRACE_PROPAGATION_EXTRACT_FIRST,
    DD_TRACE_PROPAGATION_STYLE,
    DD_TRACE_PROPAGATION_STYLE_EXTRACT,
    DD_TRACE_PROPAGATION_STYLE_INJECT,
    DD_TRACE_RATE_LIMIT,
    DD_TRACE_SAMPLING_RULES,
    DD_TRACE_STATS_COMPUTATION_ENABLED,
    DD_TRACE_X_DATADOG_TAGS_MAX_LENGTH,
    DD_VERSION,

    /// Used for testing purposes only
    #[allow(unused)]
    DD_COMPLEX_STRUCT,
}

impl SupportedConfigurations {
    pub fn as_str(&self) -> &'static str {
        match self {
            SupportedConfigurations::DD_AGENT_HOST => "DD_AGENT_HOST",
            SupportedConfigurations::DD_DOGSTATSD_HOST => "DD_DOGSTATSD_HOST",
            SupportedConfigurations::DD_DOGSTATSD_PORT => "DD_DOGSTATSD_PORT",
            SupportedConfigurations::DD_DOGSTATSD_URL => "DD_DOGSTATSD_URL",
            SupportedConfigurations::DD_ENV => "DD_ENV",
            SupportedConfigurations::DD_INSTRUMENTATION_TELEMETRY_ENABLED => {
                "DD_INSTRUMENTATION_TELEMETRY_ENABLED"
            }
            SupportedConfigurations::DD_LOG_LEVEL => "DD_LOG_LEVEL",
            SupportedConfigurations::DD_REMOTE_CONFIG_ENABLED => "DD_REMOTE_CONFIG_ENABLED",
            SupportedConfigurations::DD_REMOTE_CONFIG_POLL_INTERVAL_SECONDS => {
                "DD_REMOTE_CONFIG_POLL_INTERVAL_SECONDS"
            }
            SupportedConfigurations::DD_REMOTE_CONFIGURATION_ENABLED => {
                "DD_REMOTE_CONFIGURATION_ENABLED"
            }
            SupportedConfigurations::DD_SERVICE => "DD_SERVICE",
            SupportedConfigurations::DD_TAGS => "DD_TAGS",
            SupportedConfigurations::DD_TELEMETRY_HEARTBEAT_INTERVAL => {
                "DD_TELEMETRY_HEARTBEAT_INTERVAL"
            }
            SupportedConfigurations::DD_TELEMETRY_LOG_COLLECTION_ENABLED => {
                "DD_TELEMETRY_LOG_COLLECTION_ENABLED"
            }
            SupportedConfigurations::DD_TRACE_AGENT_PORT => "DD_TRACE_AGENT_PORT",
            SupportedConfigurations::DD_TRACE_AGENT_URL => "DD_TRACE_AGENT_URL",
            SupportedConfigurations::DD_TRACE_ENABLED => "DD_TRACE_ENABLED",
            SupportedConfigurations::DD_TRACE_PROPAGATION_EXTRACT_FIRST => {
                "DD_TRACE_PROPAGATION_EXTRACT_FIRST"
            }
            SupportedConfigurations::DD_TRACE_PROPAGATION_STYLE => "DD_TRACE_PROPAGATION_STYLE",
            SupportedConfigurations::DD_TRACE_PROPAGATION_STYLE_EXTRACT => {
                "DD_TRACE_PROPAGATION_STYLE_EXTRACT"
            }
            SupportedConfigurations::DD_TRACE_PROPAGATION_STYLE_INJECT => {
                "DD_TRACE_PROPAGATION_STYLE_INJECT"
            }
            SupportedConfigurations::DD_TRACE_RATE_LIMIT => "DD_TRACE_RATE_LIMIT",
            SupportedConfigurations::DD_TRACE_SAMPLING_RULES => "DD_TRACE_SAMPLING_RULES",
            SupportedConfigurations::DD_TRACE_STATS_COMPUTATION_ENABLED => {
                "DD_TRACE_STATS_COMPUTATION_ENABLED"
            }
            SupportedConfigurations::DD_TRACE_X_DATADOG_TAGS_MAX_LENGTH => {
                "DD_TRACE_X_DATADOG_TAGS_MAX_LENGTH"
            }
            SupportedConfigurations::DD_VERSION => "DD_VERSION",
            SupportedConfigurations::DD_COMPLEX_STRUCT => "DD_COMPLEX_STRUCT",
        }
    }
}
